version: "3.8"
services:
  api:
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.server
      network: host
    networks:
      - traefik-net
      - internal
    volumes:
      - ../line-international/logs:/app/logs
      - ../line-international/src/files:/app/src/files
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.middlewares.authentication_api.basicauth.usersfile=/etc/traefik/basicAuth/users"
      - "traefik.http.middlewares.authentication_api.basicauth.headerField=Authorization"
      - "traefik.http.middlewares.compressor_api.compress=true"
      - "traefik.http.middlewares.ratelimiter_api.ratelimit.average=100"
      - "traefik.http.middlewares.ratelimiter_api.ratelimit.burst=50"
      - "traefik.http.middlewares.cors_api.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,DELETE,POST,PATCH"
      - "traefik.http.middlewares.cors_api.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors_api.headers.accesscontrolalloworiginlist=https://api.localhost,https://app.localhost,http://localhost:3000,http://localhost:3001"
      - "traefik.http.middlewares.cors_api.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors_api.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors_api.headers.accesscontrolallowcredentials=true"
      - "traefik.http.routers.api.middlewares=ratelimiter_api,cors_api,authentication_api,compressor_api"
    healthcheck:
      test: "curl --fail --silent localhost/api/health | grep OK || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 5s
  web:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.web
      network: host
    networks:
      - traefik-net
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.service=web"
      - "traefik.http.routers.web.rule=Host(`app.localhost`)"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.middlewares.authentication_web.basicauth.usersfile=/etc/traefik/basicAuth/users"
      - "traefik.http.middlewares.authentication_web.basicauth.headerField=Authorization"
      - "traefik.http.middlewares.compressor_web.compress=true"
      - "traefik.http.middlewares.ratelimiter_web.ratelimit.average=100"
      - "traefik.http.middlewares.ratelimiter_web.ratelimit.burst=50"
      - "traefik.http.middlewares.cors_web.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,DELETE,POST,PATCH"
      - "traefik.http.middlewares.cors_web.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors_web.headers.accesscontrolalloworiginlist=https://api.localhost,https://app.localhost,http://localhost:3000,http://localhost:3001"
      - "traefik.http.middlewares.cors_web.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors_web.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors_web.headers.accessControlallowcredentials=true"
      - "traefik.http.routers.web.middlewares=ratelimiter_web,cors_web,compressor_web"
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  traefik:
    image: "traefik:v2.10"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./services/router/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./services/router/config.yml:/etc/traefik/config.yml:ro
      - ./services/router/basicAuth/users:/etc/traefik/basicAuth/users:ro
      - ./services/router/certs:/etc/certs:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-net
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_healthy

networks:
  traefik-net:
    external: true
  internal:
    driver: bridge
